// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    //DMuxear la señal de carga en 4 bloques de RAM mas pequeños en base 
    // a los 2 bits mas significativos de la direccion
    DMux4Way(in=load, sel=address[0..1], a=loadA, b=loadB, c=loadC, d=loadD);

    //Cada RAM (4096 16-bits) es seeleccionada por los otros 12 bits de la direccion
    RAM4K(in=in, load=loadA, address=address[2..13], out=ramAOut);
    RAM4K(in=in, load=loadB, address=address[2..13], out=ramBOut);
    RAM4K(in=in, load=loadC, address=address[2..13], out=ramCOut);
    RAM4K(in=in, load=loadD, address=address[2..13], out=ramDOut);

    //Muxear las salidas de los bloques de RAM para seleccionar el correcto
    Mux4Way16(a=ramAOut, b=ramBOut, c=ramCOut, d=ramDOut, sel= address[0..1], out=out);
}
